{
  "openapi": "3.0.1",
  "info": {
    "title": "CloudPi API",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://100.106.232.78:8080/api",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Filesystem API",
      "description": "API for retrieving user's file structure and file/directory info and modify it."
    },
    {
      "name": "File API",
      "description": "API for uploading, downloading and deleting files"
    },
    {
      "name": "User Management API",
      "description": "API for various operations with users"
    }
  ],
  "paths": {
    "/filesystem/directory": {
      "put": {
        "tags": [
          "Filesystem API"
        ],
        "summary": "creates a directory",
        "description": "Creates a new directory at directory provided as request parameter",
        "operationId": "createDirectory",
        "parameters": [
          {
            "name": "directoryPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoDTO"
                }
              }
            }
          }
        }
      }
    },
    "/user/new": {
      "post": {
        "tags": [
          "User Management API"
        ],
        "summary": "Creates user with given values",
        "description": "Creates user with parameters specified in the request body",
        "operationId": "createNewUser",
        "parameters": [
          {
            "name": "user",
            "description": "JSON object of users registration data"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/refresh/refresh-token": {
      "post": {
        "tags": [
          "authentication-api-controller"
        ],
        "operationId": "refreshRefreshToken",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/refresh/auth-token": {
      "post": {
        "tags": [
          "authentication-api-controller"
        ],
        "operationId": "refreshAuthToken",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "authentication-api-controller"
        ],
        "operationId": "logout",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "authentication-api-controller"
        ],
        "operationId": "login",
        "parameters": [
          {
            "name": "dontLogout",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/filesystem/{username}": {
      "get": {
        "tags": [
          "Filesystem API"
        ],
        "summary": "retrieves info about virtual drive for specified user",
        "description": "Return information about filesystem for user with username provided in path",
        "operationId": "getUsersVirtualDrivesInfo",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FilesystemInfoDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Filesystem API"
        ],
        "summary": "changes max space for virtual drive",
        "description": "Changes max space for filesystem for user with provided username - new assigned space has to be greater or equal to the space filled by all files",
        "operationId": "changeVirtualDriveMaxSize",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newAssignedSpace",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/filesystem/search": {
      "post": {
        "tags": [
          "Filesystem API"
        ],
        "operationId": "searchInUserFiles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileQueryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileInfoDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/image/{imageName}": {
      "post": {
        "tags": [
          "File API"
        ],
        "summary": "uploads new image",
        "description": "Uploads new image to ~/images/ directory",
        "operationId": "uploadNewImage",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoDTO"
                }
              }
            }
          }
        }
      }
    },
    "/files/file": {
      "post": {
        "tags": [
          "File API"
        ],
        "summary": "uploads new file",
        "description": "Uploads new file to the filesystem basing on provided path and filetype",
        "operationId": "uploadNewFile",
        "parameters": [
          {
            "name": "fileType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "UNDEFINED",
              "enum": [
                "DIRECTORY",
                "IMAGE",
                "VIDEO",
                "TEXT_FILE",
                "PDF",
                "MUSIC",
                "COMPRESSED",
                "UNDEFINED"
              ]
            }
          },
          {
            "name": "filepath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "File API"
        ],
        "summary": "deletes files with provided UUIDs in the body",
        "operationId": "deleteFiles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/drive/new": {
      "post": {
        "tags": [
          "drive-api-impl"
        ],
        "operationId": "createNewDrive",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDriveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DriveDTO"
                }
              }
            }
          }
        }
      }
    },
    "/user/{username}": {
      "delete": {
        "tags": [
          "User Management API"
        ],
        "summary": "deletes user with provided username",
        "description": "Deletes user whose username matches the one specified in the path",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "User Management API"
        ],
        "summary": "updates user with provided username",
        "description": "Updates details like username, email and path to profile picture of auser with specified username",
        "operationId": "updateUserDetails",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/filesystem/move": {
      "patch": {
        "tags": [
          "Filesystem API"
        ],
        "summary": "moves file",
        "description": "Moves a file to place specified in path - possible file rename with this method",
        "operationId": "moveFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveFileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/{username}/details": {
      "get": {
        "tags": [
          "User Management API"
        ],
        "summary": "returns all details of user with provided username",
        "description": "Returns all details of user whose username matches the one specified in the URI path",
        "operationId": "getUsersDetails",
        "parameters": [
          {
            "name": "usernames",
            "description": "One or more usernames whose details you want to acquire"
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDTO"
                }
              }
            }
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": [
          "User Management API"
        ],
        "summary": "Returns all users",
        "description": " Returns all basic user objects with their usernames, account types and paths to profile pictures.",
        "operationId": "getAllUsers",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserIdDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/filesystem/file/{fileId}": {
      "get": {
        "tags": [
          "Filesystem API"
        ],
        "summary": "retrieves information about requested file",
        "operationId": "getFileInfo",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with-permissions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoDTO"
                }
              }
            }
          }
        }
      }
    },
    "/filesystem/file-structure": {
      "get": {
        "tags": [
          "Filesystem API"
        ],
        "summary": "retrieves file structure",
        "description": "Returns file structure based on requested depth level and root - if a file has no children or depth level is too low to show them, children value is returned as empty list",
        "operationId": "getFileStructure",
        "parameters": [
          {
            "name": "structureLevels",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "fileStructureRoot",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "/"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FileStructureDTO"
                }
              }
            }
          }
        }
      }
    },
    "/files/image-preview": {
      "get": {
        "tags": [
          "File API"
        ],
        "summary": "creates image preview with provided resolution",
        "description": "returns base64 encoded resized images for files with provided UUIDs in the body",
        "operationId": "getImagesPreview",
        "parameters": [
          {
            "name": "previewResolution",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 64
            }
          },
          {
            "name": "imageIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "byte"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/file/{fileId}": {
      "get": {
        "tags": [
          "File API"
        ],
        "summary": "downloads a file",
        "description": "Returns a binary of file with provided UUID",
        "operationId": "downloadFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "File API"
        ],
        "summary": "deletes a file with provided UUID",
        "operationId": "deleteFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/files/directory/{directoryId}": {
      "get": {
        "tags": [
          "File API"
        ],
        "operationId": "compressAndDownloadDirectory",
        "parameters": [
          {
            "name": "directoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/drive": {
      "get": {
        "tags": [
          "drive-api-impl"
        ],
        "operationId": "getAllDrives",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DriveDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/discs": {
      "get": {
        "tags": [
          "drive-api-impl"
        ],
        "operationId": "getAllDiscs",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/filesystem/directory/{directoryId}": {
      "delete": {
        "tags": [
          "Filesystem API"
        ],
        "summary": "deletes directory with provided id",
        "operationId": "deleteDirectory",
        "parameters": [
          {
            "name": "directoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorBody": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          }
        }
      },
      "FileInfoDTO": {
        "type": "object",
        "properties": {
          "pubId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "parentUUID": {
            "type": "string",
            "format": "uuid"
          },
          "hasThumbnail": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "DIRECTORY",
              "IMAGE",
              "VIDEO",
              "TEXT_FILE",
              "PDF",
              "MUSIC",
              "COMPRESSED",
              "UNDEFINED"
            ]
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PostUserRequest": {
        "required": [
          "nickname",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "FileQueryDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "DIRECTORY",
              "IMAGE",
              "VIDEO",
              "TEXT_FILE",
              "PDF",
              "MUSIC",
              "COMPRESSED",
              "UNDEFINED"
            ]
          },
          "created": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "lastModified": {
            "$ref": "#/components/schemas/TimePeriod"
          }
        },
        "description": "All values are nullable (but if created or lastModified is supplied it has to contain both from and to dates)."
      },
      "TimePeriod": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PostDriveRequest": {
        "required": [
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DriveDTO": {
        "type": "object",
        "properties": {
          "pubId": {
            "type": "string",
            "format": "uuid"
          },
          "path": {
            "type": "string"
          },
          "assignedSpace": {
            "type": "integer",
            "format": "int64"
          },
          "freeSpace": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PatchUserRequest": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "profilePicturePubId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "MoveFileRequest": {
        "type": "object",
        "properties": {
          "filePubId": {
            "type": "string",
            "format": "uuid"
          },
          "newPath": {
            "type": "string"
          }
        }
      },
      "UserDetailsDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "profilePicturePubId": {
            "type": "string",
            "format": "uuid"
          },
          "nickname": {
            "type": "string"
          },
          "pubId": {
            "type": "string"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADMIN",
                "MODERATOR",
                "USER",
                "BOT"
              ]
            }
          }
        }
      },
      "UserIdDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "pubId": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "profilePicturePubId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "FilesystemInfoDTO": {
        "type": "object",
        "properties": {
          "ownerUsername": {
            "type": "string"
          },
          "totalSpace": {
            "type": "integer",
            "format": "int64"
          },
          "freeSpace": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FileStructureDTO": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "root": {
            "$ref": "#/components/schemas/FilesystemObjectDTO"
          }
        }
      },
      "FilesystemObjectDTO": {
        "type": "object",
        "properties": {
          "pubId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "enum": [
              "DIRECTORY",
              "IMAGE",
              "VIDEO",
              "TEXT_FILE",
              "PDF",
              "MUSIC",
              "COMPRESSED",
              "UNDEFINED"
            ]
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesystemObjectDTO"
            }
          }
        }
      },
      "DiscDTO": {
        "type": "object",
        "properties": {
          "discName": {
            "type": "string"
          },
          "discSize": {
            "type": "integer",
            "format": "int64"
          },
          "discSpaceAvailable": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "securitySchemes": {
      "CloudPiAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
